events { worker_connections 1024; }

http {
  # Configuração do load balancer para a API
  upstream backend_api {
    # Usando resolução DNS para descobrir todas as réplicas do serviço api
    server api:8000 resolve;
    
    # Algoritmo de balanceamento - least_conn para usar o nó com menos conexões ativas
    least_conn;
    
    # Configurações para detecção e manejo de falhas
    keepalive 32;
    keepalive_timeout 60s;
    keepalive_requests 100;
  }

  # Configurações de timeouts e buffers
  proxy_connect_timeout 1s;
  proxy_send_timeout 5s;
  proxy_read_timeout 5s;
  proxy_buffers 16 32k;
  
  # Definição das capturas de métricas para monitoramento
  log_format upstream_time '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" '
                           'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';
  
  access_log /var/log/nginx/access.log upstream_time;

  server {
    listen 80;
    
    # Endpoint de documentação da API (assumindo FastAPI com Swagger UI)
    location /docs {
      proxy_pass http://backend_api/docs;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
    }
    
    # Rota principal de API
    location /kv {
      proxy_pass http://backend_api/kv;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_connect_timeout 1s;
      proxy_read_timeout 5s;
    }
    
    # Health checks
    location /health {
      proxy_pass http://backend_api/health;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_connect_timeout 1s;
      proxy_read_timeout 2s;
    }
    
    # Liveness probe específica
    location /health/live {
      proxy_pass http://backend_api/health/live;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_connect_timeout 1s;
      proxy_read_timeout 2s;
    }
    
    # Readiness probe específica
    location /health/ready {
      proxy_pass http://backend_api/health/ready;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_connect_timeout 1s;
      proxy_read_timeout 2s;
    }
    
    # Métricas para Prometheus
    location /metrics {
      proxy_pass http://backend_api/metrics;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
    }
    
    # Demais rotas vão para o backend API
    location / {
      proxy_pass http://backend_api;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_connect_timeout 1s;
      proxy_read_timeout 5s;
    }
  }
}
